generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  Product     Product[]
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  orderDate   DateTime    @default(now())
  status      String
  totalAmount Float
  User        User        @relation(fields: [userId], references: [id])
  OrderItem   OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  Order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  categoryId  Int
  createdAt   DateTime    @default(now())
  updatedAt DateTime @updatedAt
  OrderItem   OrderItem[]
  Category    Category    @relation(fields: [categoryId], references: [id])
  Review      Review[]
  image       String?

  @@map("product")
}

model Review {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  User      User     @relation(fields: [userId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
  Review    Review[]
}
